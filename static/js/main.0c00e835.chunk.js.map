{"version":3,"sources":["actions/listActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/index.js","store/index.js","components/TrelloCard.js","components/TrelloActionButton.js","components/TrelloList.js","components/SimpleList.js","components/InfoModal.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","cardID","initialState","id","cards","listsReducer","state","action","newList","newCard","console","log","newState","map","list","splice","find","card","listStart","listEnd","combineReducers","lists","store","createStore","rootReducer","CardContainer","styled","div","TrelloCard","index","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","CardContent","Typography","gutterBottom","TrelloActionButton","formOpen","openForm","setState","handleInputChange","e","target","value","closeForm","handleAddList","dispatch","props","handleAddCard","renderAddButton","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","onClick","style","styles","openFormButtonGroup","opacity","color","backgroundColor","Icon","renderForm","placeholder","buttonTitle","overflow","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formButtonGroup","Button","onMouseDown","variant","marginLeft","cursor","this","React","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop","connect","ListsContainer","TrelloList","droppableId","droppableProps","key","useStyles","makeStyles","theme","root","palette","background","paper","SimpleList","classes","className","List","component","aria-label","ListItem","button","ListItemIcon","ListItemText","primary","Divider","DialogTitle","withStyles","margin","closeButton","position","right","spacing","top","grey","icon","marginRight","children","onClose","other","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","InfoModal","useState","open","setOpen","handleClose","Dialog","aria-labelledby","dividers","edge","href","flexGrow","marginBottom","menuButton","Header","AppBar","Toolbar","App","onDragEnd","result","destination","source","direction","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c00e835.chunk.js","sourcesContent":["import { CONSTANTS } from '../actions';\n\nexport const addList = title => {\n    return {\n        type: CONSTANTS.ADD_LIST,\n        payload: title\n    };\n};\n\nexport const sort = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n    type \n) => {\n    return {\n        type: CONSTANTS.DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexEnd,\n            droppableIndexStart,\n            draggableId,\n            type\n        }\n    }\n}","import { CONSTANTS } from '../actions';\n\nexport const addCard = (listID, text) => {\n    return {\n        type: CONSTANTS.ADD_CARD,\n        payload: {text, listID}\n    };\n};","export * from \"./listActions\";\nexport * from './cardsActions';\n\nexport const CONSTANTS = {\n    ADD_CARD: 'ADD_CARD',\n    ADD_LIST: 'ADD_LIST',\n    DRAG_HAPPENED: 'DRAG_HAPPENED'\n};","import { CONSTANTS } from '../actions';\n\nlet listID = 2;\nlet cardID = 6;\n\nconst initialState = [\n    {\n        title: \"To Do List\",\n        id: `list-${0}`,\n        cards: [\n            {\n                id: `card-${0}`,\n                text: \"lorem de prueba para la lista\"\n            },\n            {\n                id: `card-${1}`,\n                text: \"lorem de prueba para la lista 2\"\n            }\n        ]\n    },\n    {\n        title: \"In Process\",\n        id: `list-${1}`,\n        cards: [\n            {\n                id: `card-${2}`,\n                text: \"lorem de prueba para la lista\"\n            },\n            {\n                id: `card-${3}`,\n                text: \"lorem de prueba para la lista 2\"\n            },\n            {\n                id: `card-${4}`,\n                text: \"lorem de prueba para la lista 3\"\n            },\n            {\n                id: `card-${5}`,\n                text: \"lorem de prueba para la lista 4\"\n            }\n        ]\n    }\n];\n\nconst listsReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case CONSTANTS.ADD_LIST:\n            const newList = {\n                title: action.payload,\n                cards: [],\n                id: `list-${listID}`\n            };\n            listID += 1\n            return [...state,  newList];\n\n        case CONSTANTS.ADD_CARD:\n            {\n                const newCard = {\n                text: action.payload.text,\n                id: `card-${cardID}`\n                };\n             cardID += 1;\n\n                console.log('action received', action);\n\n        const newState = state.map(list => {\n            if(list.id === action.payload.listID) {\n                return {\n                    ...list,\n                    cards: [...list.cards, newCard]\n                };\n            } else {\n                return list;\n            }\n        });\n\n            return newState;\n        }\n        case CONSTANTS.DRAG_HAPPENED:\n\n            const {\n                droppableIdStart,\n                droppableIdEnd,\n                droppableIndexEnd,\n                droppableIndexStart,\n               // draggableId,\n                type\n            } = action.payload;\n\n            const newState = [...state];\n\n            // dragging list around\n            if(type === 'list') {\n                const list = newState.splice(droppableIndexStart, 1);\n                newState.splice(droppableIndexEnd, 0, ...list);\n                return newState;\n            }\n\n            // in the same list\n            if (droppableIdStart === droppableIdEnd) {\n                const list = state.find(list => droppableIdStart === list.id);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n\n            //other list\n\n            if (droppableIdStart !== droppableIdEnd) {\n                // find the list where drag happend\n                const listStart = state.find(list => droppableIdStart === list.id);\n\n                // pull out the card from the list\n                const card = listStart.cards.splice(droppableIndexStart, 1);\n\n                // find the list where grag ended\n                const listEnd = state.find(list => droppableIdEnd === list.id);\n\n                // put the card in the new lst\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n\n            }\n\n            return newState;\n        \n        default:\n            return state;\n    }\n};\n\nexport default listsReducer;","import { combineReducers } from 'redux';\nimport listsReducer from './listsReducer';\n\nexport default combineReducers({\n    lists: listsReducer\n});","import { createStore } from 'redux';\nimport rootReducer from \"../reducers\";\n\n//const reducer = () => {};\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Draggable} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n    margin-bottom: 8px;\n`;\n\nconst TrelloCard = ({ text, id, index }) => {\n    return(\n        <Draggable draggableId={String(id)} index={index}>\n            {provided => ( \n                <CardContainer \n                    ref={provided.innerRef} \n                    {...provided.draggableProps} \n                    {...provided.dragHandleProps}\n                >         \n                <Card>\n                    <CardContent>\n                        <Typography gutterBottom>{text}</Typography>\n                    </CardContent>\n                </Card>\n                </CardContainer>\n            )}\n        </Draggable>\n    );\n};\n\n\nexport default TrelloCard;","import React from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Card, Button } from '@material-ui/core';\nimport Textarea from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport  {  addList, addCard } from '../actions';\n\nclass TrelloActionButton extends React.Component {\n\n    state = {\n        formOpen: false\n    }\n\n    openForm = () => {\n        this.setState({\n            formOpen: true\n        });\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    closeForm = (e) => {\n        this.setState({\n            formOpen: false\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n\n        if (text) {\n            this.setState({\n                text: ''\n            });\n            dispatch(addList(text));\n        }\n\n        return;\n    };\n\n    handleAddCard = () => {\n        const { dispatch, listID } = this.props;\n        const { text } = this.state;\n\n        if(text) {\n            this.setState({\n                text: ''\n            });\n            dispatch(addCard(listID, text));\n        }\n    };\n\n    renderAddButton = () => {\n        const { list } = this.props;\n\n        const buttonText = list ? 'Add another list' : 'Add another card'\n        const buttonTextOpacity = list ? 1 : 0.5;\n        const buttonTextColor = list ? 'white' : 'inherit';\n        const buttonTextBackground = list ? 'rgba(0, 0, 0, .15)' : 'inherit';\n\n        return (\n            <div\n            onClick={this.openForm} \n            style={{\n                ...styles.openFormButtonGroup,\n                opacity: buttonTextOpacity, \n                color: buttonTextColor, \n                backgroundColor: buttonTextBackground\n                }}\n                >\n                <Icon>add</Icon>\n                <p>{buttonText}</p>\n            </div>\n        )\n    };\n\n    renderForm = () => {\n\n        const { list } = this.props;\n\n        const placeholder = list\n        ? 'Enter list title...'\n        : 'Enter a title for this card...';\n\n        const buttonTitle = list ? 'Add List' : 'Add Card'\n\n        return <div>\n            <Card style={{\n                    overflow: 'visible',\n                    minHeight: 80,\n                    minWidth: 272,\n                    padding: '6px 8px 2px'\n                }}\n            >\n                <Textarea \n                    placeholder={placeholder} \n                    autoFocus \n                    onBlur={this.closeForm} \n                    value={this.state.text}\n                    onChange={this.handleInputChange}\n                    style={{\n                        resize: 'none', \n                        width: '100%',\n                        overflow: 'hidden',\n                        outline: 'none',\n                        border: 'none'\n                    }}\n                />\n            </Card>\n            <div style={styles.formButtonGroup}>\n                <Button \n                    onMouseDown={ list ? this.handleAddList : this.handleAddCard }\n                    variant='contained' \n                    style={{color: 'white', backgroundColor:'#5aac44'}} \n                >\n                    {buttonTitle}{' '}\n                </Button>\n                <Icon style={{ marginLeft: 8, cursor: 'pointer' }}>close</Icon>\n            </div>\n        </div>\n    };\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nconst styles = {\n    openFormButtonGroup: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 3,\n        height: 36,\n        width: 272,\n        paddingLeft: 10\n    },\n    formButtonGroup: {\n        display: 'flex',\n        marginTop: 8,\n        alignItems: 'center'\n    }\n};\n\nexport default connect() (TrelloActionButton);","import React from 'react';\nimport Trellocard from './TrelloCard';\nimport TrelloActionButton from './TrelloActionButton';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n//import { string } from 'prop-types';\n\nconst ListsContainer = styled.div`\n    background-color: #dfe3e6;\n    border-radius: 3px;\n    width: 300px;\n    padding: 8px;\n    height: 100%;\n    margin-right: 8px;\n`;\n\nconst TrelloList = ({ title, cards, listID, index }) => {\n    return(\n        <Draggable draggableId={String(listID)} index={index}>\n            {provided => (\n                <ListsContainer \n                {...provided.draggableProps} \n                ref={provided.innerRef}\n                {...provided.dragHandleProps}\n                >\n                <Droppable droppableId={String(listID)} type='card'>\n                { provided => (\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\n                        <h4>{title}</h4>\n                        {cards.map((card, index) => (\n                            <Trellocard \n                                key={card.id} \n                                index={index} \n                                text={card.text} \n                                id={card.id} \n                            /> \n                        ))}\n                        {provided.placeholder}\n                        <TrelloActionButton listID={listID} />\n                    </div>\n                )}   \n                </Droppable>    \n            </ListsContainer>    \n            )}\n        </Draggable>\n    );\n};\n\nexport default TrelloList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CodeIcon from '@material-ui/icons/Code';\nimport StyleIcon from '@material-ui/icons/Style';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst SimpleList = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <CodeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"ReactJS\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <CodeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Redux\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StyleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Material-UI\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StyleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Styled Components\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StorageIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Local Storage\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default SimpleList;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nimport SimpleList from './SimpleList';\n\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst InfoModal = () => {\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n         <IconButton onClick={handleClickOpen} color=\"inherit\" aria-label=\"menu\">\n            <InfoIcon />\n        </IconButton>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            Development technologies\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n          This is a task ticket management tool developed to support the management of a project using agile methodologies such as Scrum.\n          </Typography>\n            <SimpleList />\n          <Typography gutterBottom>\n            You can also view other projects like this in my GitHub repository or you can see my linkedin profile for more information.\n          </Typography>\n          <DialogActions style={{marginRight: \"40%\"}}>\n            <IconButton edge=\"start\" href=\"https://github.com/gmujica/proyect-ticket-manager\" target=\"_blank\"  color=\"inherit\" aria-label=\"menu\">\n              <GitHubIcon />\n            </IconButton>\n            <IconButton edge=\"start\" href=\"https://www.linkedin.com/in/gregory-mujica-2a0400b6/\" target=\"_blank\" color=\"inherit\" aria-label=\"menu\">\n              <LinkedInIcon />\n            </IconButton>\n          </DialogActions>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default InfoModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nimport InfoModal from './InfoModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 50\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Proyect Ticket Manager\n          </Typography>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <InfoModal />\n          </IconButton>\n          <IconButton edge=\"start\" href=\"https://github.com/gmujica/proyect-ticket-manager\" target=\"_blank\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <GitHubIcon />\n          </IconButton>\n          <IconButton edge=\"start\" href=\"https://www.linkedin.com/in/gregory-mujica-2a0400b6/\" target=\"_blank\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <LinkedInIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nexport default Header;","import React, { Component } from 'react';\nimport TrelloList from './TrelloList'\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport TrelloActionButton from  './TrelloActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'; \nimport { sort } from '../actions';  \nimport styled from 'styled-components';\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flexDirection: row;\n`;\n\n\nclass App extends Component {\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n\n    if(!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div>\n          <Header />\n          <Droppable droppableId='all-list' direction='horizontal' type='list'>\n            {provided => (\n              <ListsContainer \n                {...provided.droppableProps}\n                ref={provided.innerRef} \n              >\n              {lists.map((list, index) => (\n                <TrelloList \n                  listID={list.id} \n                  key={list.id} \n                  title={list.title} \n                  cards={list.cards}\n                  index={index} \n                />\n              ))}\n              {provided.placeholder}\n              <TrelloActionButton list />\n            </ListsContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n});\n\nexport default connect(mapStateToProps) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}